PidFile /tmp/httpd.pid
User www-data
Group www-data

ServerTokens Prod
TraceEnable off

LogLevel warn
ErrorLog "|/bin/cat"
LogFormat "(%v:%p) %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"" combined
CustomLog "|/bin/cat" combined

###################################################################

LoadModule mpm_event_module  /usr/lib/apache2/modules/mod_mpm_event.so
  StartServers 2
  MinSpareThreads 25
  MaxSpareThreads 75
  ThreadLimit 64
  ThreadsPerChild 25
  MaxRequestWorkers 150
  MaxConnectionsPerChild 0

LoadModule authz_core_module /usr/lib/apache2/modules/mod_authz_core.so
LoadModule authz_host_module /usr/lib/apache2/modules/mod_authz_host.so
  <Directory />
    Require all denied
  </Directory>

LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so
LoadModule expires_module /usr/lib/apache2/modules/mod_expires.so

LoadModule socache_shmcb_module /usr/lib/apache2/modules/mod_socache_shmcb.so
LoadModule ssl_module /usr/lib/apache2/modules/mod_ssl.so

LoadModule include_module /usr/lib/apache2/modules/mod_include.so
  Include /etc/apache2/SSLConfig-TxState.conf

LoadModule headers_module /usr/lib/apache2/modules/mod_headers.so

LoadModule passenger_module /usr/local/lib/passenger-6.0.4/buildout/apache2/mod_passenger.so
  PassengerRoot /usr/local/lib/passenger-6.0.4
  PassengerRuby /usr/local/rvm/wrappers/ruby-2.2.4/ruby
  PassengerLogFile /dev/stderr
  PassengerDefaultUser root

###################################################################

Listen 80
Listen 443

<VirtualHost *:443>
  ServerName {{WEB_HOSTNAME}}
  ServerAdmin {{SERVER_ADMIN}}
  RailsEnv {{RAILS_ENV}}

  SSLEngine On
  SSLCertificateKeyFile {{sslkeyfile}}
  SSLCertificateFile {{sslcertfile}}
  Header always set Strict-Transport-Security "max-age=31536000"

  DocumentRoot /usr/app/public
  <Directory /usr/app/public>
    Require all granted
    AllowOverride all
    Options -MultiViews
  </Directory>

  PassengerAppRoot /usr/app

  <Directory /usr/app/public/system/items>
     # Make all attachments download instead of display in browser
     <IfModule mod_headers.c>
       Header set Content-Disposition "attachment"
     </IfModule>
  </Directory>
  
  # Enable far-future caching for files in the assets directory
  <LocationMatch "^/assets/.*$">
    Header unset ETag
    FileETag None
    # RFC says only cache for 1 year
    ExpiresActive On
    ExpiresDefault "access plus 1 year"
  </LocationMatch>

 # Let apache serve the pre-compiled .gz version of static assets,
 # if available, and the user-agent can handle it. Set all headers
 # correctly when doing so.
 <LocationMatch "^/assets/.*\.(css|js)$">
   RewriteEngine on

   # Make sure the browser supports gzip encoding before we send it,
   # and that we have a precompiled .gz version.
   RewriteCond %{HTTP:Accept-Encoding} \b(x-)?gzip\b
   RewriteCond %{REQUEST_FILENAME}.gz -s
   RewriteRule ^(.+)$ $1.gz
 </LocationMatch>
 
 # Make sure Content-Type is set for 'real' type, not gzip,
 # and Content-Encoding is there to tell browser it needs to
 # unzip to get real type.
 #
 # Make sure Vary header is set; while apache docs suggest it
 # ought to be set automatically by our RewriteCond that uses an HTTP
 # header, does not seem to be reliably working.
 <LocationMatch "^/assets/.*\.css\.gz$">
     ForceType text/css
     Header set Content-Encoding gzip
     Header add Vary Accept-Encoding
 </LocationMatch>

 <LocationMatch "^/assets/.*\.js\.gz$">
     ForceType application/javascript
     Header set Content-Encoding gzip
     Header add Vary Accept-Encoding
 </LocationMatch>

 LimitRequestBody 15728640
 ErrorDocument 413 /413.html

</VirtualHost>

<VirtualHost *:80>
  ServerName {{WEB_HOSTNAME}}

  DocumentRoot /var/empty

  RewriteEngine On
  RewriteRule ^/(.*) https://{{WEB_HOSTNAME}}/$1 [R]
</VirtualHost>
